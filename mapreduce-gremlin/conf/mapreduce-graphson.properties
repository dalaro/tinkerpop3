gremlin.graph=com.tinkerpop.gremlin.hmr.structure.HMRGraph
hmr.inputFormatClass=com.tinkerpop.gremlin.hmr.graphson.GraphSONInputFormat
#hmr.outputFormatClass=org.apache.hadoop.mapreduce.lib.output.TextOutputFormat
#hmr.gremlin.memoryOutputFormatClass=org.apache.hadoop.mapreduce.lib.output.TextOutputFormat
hmr.outputFormatClass=org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat
hmr.gremlin.memoryOutputFormatClass=org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat

hmr.gremlin.inputLocation=data/tinkerpop-classic-vertices.ldjson
hmr.gremlin.outputLocation=output
hmr.gremlin.deriveMemory=false
hmr.gremlin.jarsInDistributedCache=true

# It is possible to provide Hadoop configuration parameters.
# Note that these parameters are provided to each MapReduce job within the entire Giraph-Gremlin job pipeline.
# Some of these parameters may be over written by Giraph-Gremlin as deemed necessary.

# mapred.linerecordreader.maxlength=5242880
# mapred.map.child.java.opts=-Xmx1024m -Dtinkerpop.profiling=true
# mapred.reduce.child.java.opts=-Xmx1024m -Dtinkerpop.profiling=true
# mapred.map.tasks=6
# mapred.reduce.tasks=3
# mapred.job.reuse.jvm.num.tasks=-1
# mapred.task.timeout=5400000
# mapred.reduce.parallel.copies=50
# io.sort.factor=100
# io.sort.mb=200
